{
  "$schema": "https://biomejs.dev/schemas/2.2.4/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true,
    "defaultBranch": "main"
  },
  "files": {
    "ignoreUnknown": false
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "attributePosition": "auto",
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 80,
    "lineEnding": "lf"
  },
  "linter": {
    "enabled": true,
    "domains": {
      "project": "all",
      "react": "all",
      "test": "all"
    },
    "rules": {
      "recommended": true,
      "a11y": {
        "noAccessKey": "error",
        "noAriaHiddenOnFocusable": "error",
        "noAriaUnsupportedElements": "error",
        "noAutofocus": "error",
        "noDistractingElements": "error",
        "noHeaderScope": "error",
        "noInteractiveElementToNoninteractiveRole": "error",
        "noLabelWithoutControl": "error",
        "noNoninteractiveElementInteractions": "error",
        "noNoninteractiveElementToInteractiveRole": "error",
        "noNoninteractiveTabindex": "error",
        "noPositiveTabindex": "error",
        "noRedundantAlt": "error",
        "noRedundantRoles": "error",
        "noStaticElementInteractions": "error",
        "noSvgWithoutTitle": "error",
        "useAltText": "error",
        "useAnchorContent": "error",
        "useAriaActivedescendantWithTabindex": "error",
        "useAriaPropsForRole": "error",
        "useAriaPropsSupportedByRole": "error",
        "useButtonType": "error",
        "useFocusableInteractive": "error",
        "useHeadingContent": "error",
        "useHtmlLang": "error",
        "useIframeTitle": "error",
        "useKeyWithClickEvents": "error",
        "useKeyWithMouseEvents": "error",
        "useMediaCaption": "error",
        "useSemanticElements": "error",
        "useValidAnchor": "error",
        "useValidAriaProps": "error",
        "useValidAriaRole": "error",
        "useValidAriaValues": "error",
        "useValidAutocomplete": "error",
        "useValidLang": "error",

        "useGenericFontNames": "error"
      },
      "complexity": {
        "noAdjacentSpacesInRegex": "error",
        "noArguments": "error",
        "noBannedTypes": "error",
        "noCommaOperator": "error",
        "noEmptyTypeParameters": "error",
        "noExcessiveCognitiveComplexity": {
          "level": "error",
          "options": {
            "maxAllowedComplexity": 10
          }
        },
        "noExcessiveLinesPerFunction": {
          "level": "error",
          "options": {
            "maxLines": 50
          }
        },
        "noExcessiveNestedTestSuites": "error",
        "noExtraBooleanCast": "error",
        "noFlatMapIdentity": "error",
        "noForEach": "error",
        "noImplicitCoercions": "error",
        "noStaticOnlyClass": "error",
        "noThisInStatic": "error",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessContinue": "error",
        "noUselessEmptyExport": "error",
        "noUselessEscapeInRegex": "error",
        "noUselessFragments": "error",
        "noUselessLabel": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessStringConcat": "error",
        "noUselessStringRaw": "error",
        "noUselessSwitchCase": "error",
        "noUselessTernary": "error",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "noUselessUndefinedInitialization": "error",
        "noVoid": "error",
        "useArrowFunction": "error",
        "useDateNow": "error",
        "useFlatMap": "error",
        "useIndexOf": "error",
        "useLiteralKeys": "error",
        "useNumericLiterals": "error",
        "useOptionalChain": "error",
        "useRegexLiterals": "error",
        "useSimpleNumberKeys": "error",
        "useSimplifiedLogicExpression": "error",
        "useWhile": "error",

        "noImportantStyles": "error"
      },
      "correctness": {
        "noChildrenProp": "error",
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noConstantMathMinMaxClamp": "error",
        "noConstructorReturn": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalDirnameFilename": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noNestedComponentDefinitions": "error",
        "noNodejsModules": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noPrivateImports": "error",
        "noProcessGlobal": "error",
        "noReactPropAssignments": "error",
        "noRenderReturnValue": "error",
        "noRestrictedElements": {
          "level": "error",
          "options": {
            "elements": {
              "button": "button is not allowed, use Button/ButtonArea component instead",
              "dialog": "dialog is not allowed, use Modal component instead",
              "div": "div is not allowed, use Flex/Flex1 component instead",
              "fieldset": "fieldset is not allowed, use Fieldset component instead",
              "form": "form is not allowed, use Form component instead",
              "h1": "h1 is not allowed, use AppTitle component instead",
              "h2": "h2 is not allowed, use Text component instead",
              "input": "input is not allowed, use Input component instead",
              "main": "main is not allowed, use Container component instead",
              "p": "p is not allowed, use Text component instead",
              "style": "style is not allowed",
              "ul": "ul is not allowed, use Flex component instead"
            }
          }
        },
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noStringCaseMismatch": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredDependencies": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedFunctionParameters": "error",
        "noUnusedImports": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "noVoidElementsWithChildren": "error",
        "noVoidTypeReturn": "error",
        "useExhaustiveDependencies": {
          "level": "error",
          "options": {
            "hooks": [
              {
                "name": "useQueryBase",
                "stableResult": ["handleSuccess", "handleError"]
              }
            ]
          }
        },
        "useHookAtTopLevel": "error",
        "useImportExtensions": "off",
        "useIsNan": "error",
        "useJsonImportAttributes": "error",
        "useJsxKeyInIterable": "error",
        "useParseIntRadix": "error",
        "useSingleJsDocAsterisk": "error",
        "useUniqueElementIds": "error",
        "useValidForDirection": "error",
        "useValidTypeof": "error",
        "useYield": "error",

        "noInvalidDirectionInLinearGradient": "error",
        "noInvalidGridAreas": "error",
        "noInvalidPositionAtImportRule": "error",
        "noMissingVarFunction": "error",
        "noUnknownFunction": "error",
        "noUnknownMediaFeatureName": "error",
        "noUnknownProperty": "error",
        "noUnknownPseudoClass": "error",
        "noUnknownPseudoElement": "error",
        "noUnknownTypeSelector": "error",
        "noUnknownUnit": "error",
        "noUnmatchableAnbSelector": "error"
      },
      "performance": {
        "noAccumulatingSpread": "error",
        "noAwaitInLoops": "error",
        "noBarrelFile": "error",
        "noDelete": "error",
        "noDynamicNamespaceImportAccess": "error",
        "noImgElement": "error",
        "noNamespaceImport": "error",
        "noReExportAll": "error",
        "noUnwantedPolyfillio": "error",
        "useGoogleFontPreconnect": "error",
        "useTopLevelRegex": "error"
      },
      "security": {
        "noBlankTarget": "error",
        "noDangerouslySetInnerHtml": "error",
        "noDangerouslySetInnerHtmlWithChildren": "error",
        "noGlobalEval": "error"
      },
      "style": {
        "noCommonJs": "error",
        "noDefaultExport": "error",
        "noDoneCallback": "error",
        "noEnum": "error",
        "noExportedImports": "error",
        "noHeadElement": "error",
        "noImplicitBoolean": "off",
        "noInferrableTypes": "error",
        "noMagicNumbers": "error",
        "noNamespace": "error",
        "noNegationElse": "error",
        "noNestedTernary": "error",
        "noNonNullAssertion": "error",
        "noParameterAssign": "error",
        "noParameterProperties": "error",
        "noProcessEnv": "error",
        "noRestrictedGlobals": "error",
        "noRestrictedImports": {
          "level": "error",
          "options": {
            "patterns": [
              {
                "group": ["**/*"],
                "message": "Do not import"
              }
            ]
          }
        },
        "noRestrictedTypes": {
          "level": "error",
          "options": {
            "types": {
              "Item": "Cannot use misleading name type"
            }
          }
        },
        "noShoutyConstants": "error",
        "noSubstr": "error",
        "noUnusedTemplateLiteral": "error",
        "noUselessElse": "error",
        "noYodaExpression": "error",
        "useArrayLiterals": "error",
        "useAsConstAssertion": "error",
        "useAtIndex": "error",
        "useBlockStatements": "error",
        "useCollapsedElseIf": "error",
        "useCollapsedIf": "error",
        "useComponentExportOnlyModules": "error",
        "useConsistentArrayType": {
          "level": "error",
          "options": {
            "syntax": "shorthand"
          }
        },
        "useConsistentBuiltinInstantiation": "error",
        "useConsistentCurlyBraces": "error",
        "useConsistentMemberAccessibility": "error",
        "useConsistentObjectDefinitions": "error",
        "useConst": "error",
        "useDefaultParameterLast": "error",
        "useDefaultSwitchClause": "error",
        "useEnumInitializers": "error",
        "useExplicitLengthCheck": "error",
        "useExponentiationOperator": "error",
        "useExportType": "error",
        "useExportsLast": "error",
        "useFilenamingConvention": {
          "level": "error",
          "options": {
            "filenameCases": ["kebab-case"]
          }
        },
        "useForOf": "error",
        "useFragmentSyntax": "error",
        "useGroupedAccessorPairs": "error",
        "useImportType": "error",
        "useLiteralEnumMembers": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "conventions": [
              {
                "selector": {
                  "kind": "let"
                },
                "match": ""
              }
            ]
          }
        },
        "useNodeAssertStrict": "error",
        "useNodejsImportProtocol": "error",
        "useNumberNamespace": "error",
        "useNumericSeparators": "error",
        "useObjectSpread": "error",
        "useReadonlyClassProperties": "error",
        "useSelfClosingElements": "error",
        "useShorthandAssign": "error",
        "useShorthandFunctionType": "error",
        "useSingleVarDeclarator": "error",
        "useSymbolDescription": "error",
        "useTemplate": "error",
        "useThrowNewError": "error",
        "useThrowOnlyError": "error",
        "useTrimStartEnd": "error",
        "useUnifiedTypeSignatures": "error",

        "noDescendingSpecificity": "error",
        "noValueAtRule": "error"
      },
      "suspicious": {
        "noAlert": "error",
        "noApproximativeNumericConstant": "error",
        "noArrayIndexKey": "error",
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noBitwiseOperators": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCommentText": "error",
        "noCompareNegZero": "error",
        "noConfusingLabels": "error",
        "noConfusingVoidType": "error",
        "noConsole": "error",
        "noConstEnum": "error",
        "noConstantBinaryExpressions": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDocumentCookie": "error",
        "noDocumentImportInPage": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateElseIf": "error",
        "noDuplicateJsxProps": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noDuplicateTestHooks": "error",
        "noEmptyBlockStatements": "error",
        "noEmptyInterface": "error",
        "noEvolvingTypes": "error",
        "noExplicitAny": "error",
        "noExportsInTest": "error",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFocusedTests": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noGlobalIsFinite": "error",
        "noGlobalIsNan": "error",
        "noHeadImportInDocument": "error",
        "noImplicitAnyLet": "error",
        "noImportAssign": "error",
        "noIrregularWhitespace": "error",
        "noLabelVar": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noMisplacedAssertion": "error",
        "noMisrefactoredShorthandAssign": "error",
        "noOctalEscape": "error",
        "noPrototypeBuiltins": "error",
        "noReactSpecificProps": "off",
        "noRedeclare": "error",
        "noRedundantUseStrict": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "error",
        "noSkippedTests": "error",
        "noSparseArray": "error",
        "noSuspiciousSemicolonInJsx": "error",
        "noTemplateCurlyInString": "error",
        "noThenProperty": "error",
        "noTsIgnore": "error",
        "noUnassignedVariables": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "noUselessEscapeInString": "error",
        "noUselessRegexBackrefs": "error",
        "noVar": "error",
        "noWith": "error",
        "useAdjacentOverloadSignatures": "error",
        "useAwait": "error",
        "useDefaultSwitchClauseLast": "error",
        "useErrorMessage": "error",
        "useGetterReturn": "error",
        "useGoogleFontDisplay": "error",
        "useGuardForIn": "error",
        "useIsArray": "error",
        "useIterableCallbackReturn": "error",
        "useNamespaceKeyword": "error",
        "useNumberToFixedDigitsArgument": "error",
        "useStaticResponseMethods": "error",
        "useStrictMode": "error",

        "noDuplicateAtImportRules": "error",
        "noDuplicateCustomProperties": "error",
        "noDuplicateFontNames": "error",
        "noDuplicateProperties": "error",
        "noDuplicateSelectorsKeyframeBlock": "error",
        "noEmptyBlock": "error",
        "noImportantInKeyframe": "error",
        "noShorthandPropertyOverrides": "error",
        "noUnknownAtRules": "error",

        "noBiomeFirstException": "error",
        "noQuickfixBiome": "error",
        "useBiomeIgnoreFolder": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "arrowParentheses": "always",
      "bracketSameLine": false,
      "bracketSpacing": true,
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "quoteStyle": "double",
      "semicolons": "asNeeded",
      "trailingCommas": "es5"
    }
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": "on",
        "useSortedAttributes": "off",
        "useSortedKeys": "off",
        "useSortedProperties": "off"
      }
    }
  },
  "overrides": [
    {
      "includes": ["**/__mocks__/**/*.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["**/*", "!vitest"],
                    "message": "You can import from vitest"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/**/*.stories.tsx"],
      "linter": {
        "rules": {
          "style": {
            "noDefaultExport": "off",
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": [
                      "**/*",
                      "!@storybook/preact-vite",
                      "!storybook/test",
                      "!preact",
                      "!**/__storybook__/**/*",
                      "!@/types/non-nullable-keyish",
                      "!./*"
                    ],
                    "message": "You can import from storybook, preact, NonNullableKeyish, and sibling files"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": [
        "src/**/*.tsx",
        "!src/**/*.stories.tsx",
        "!src/**/*.test.tsx"
      ],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": ["**/__*__/**"],
                    "message": "Do not import from dev only files"
                  },
                  {
                    "group": [
                      "**/*",
                      "!@tanstack/react-virtual",
                      "!class-variance-authority",
                      "!preact",
                      "!preact/compat",
                      "!preact/hooks",
                      "!react-hook-form",
                      "!zod",
                      "!@/assets/icon/*",
                      "!@/components/**/*",
                      "!@/hooks/use-schemed-form/use-schemed-form",
                      "!@/types/*"
                    ],
                    "message": "You can import from cva, preact, zod, icons, components, and use-schemed-form"
                  },
                  {
                    "group": ["preact/compat"],
                    "importNamePattern": "forwardRef",
                    "invertImportNamePattern": true,
                    "message": "You can import forwardRef from preact/compat"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/**/use-*.ts", "!src/**/use-*.test.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": ["**/__*__/**"],
                    "message": "Do not import from dev only files"
                  },
                  {
                    "group": [
                      "**/*",
                      "!preact/hooks",
                      "!sonner",
                      "!use-debounce",
                      "!@/actions/*",
                      "!@/components/**/use-*",
                      "!@/hooks/**/*",
                      "!@/types/*",
                      "!./*"
                    ],
                    "message": "You can import from preact/hooks, sonner, use-debounce, actions, hooks, types, and sibling files"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/**/*.test.tsx"],
      "linter": {
        "rules": {
          "correctness": {
            "noRestrictedElements": "off"
          },
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": [
                      "**/*",
                      "!vitest",
                      "!vitest-browser-preact",
                      "!@vitest/browser/context",
                      "!@/test-utils/*",
                      "!./*"
                    ],
                    "message": "You can import from test, and sibling files"
                  },
                  {
                    "group": ["vitest"],
                    "importNamePattern": "it",
                    "message": "Do not import it from vitest. Use test instead."
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/**/use-*.test.tsx"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": [
                      "**/*",
                      "!vitest",
                      "!vitest-browser-preact",
                      "!@vitest/browser/context",
                      "!@/test-utils/*",
                      "!sonner",
                      "!@/actions/*",
                      "!@/types/*",
                      "!./*"
                    ],
                    "message": "You can import from test, sonner, actions, types, and sibling files"
                  },
                  {
                    "group": ["vitest"],
                    "importNamePattern": "it",
                    "message": "Do not import it from vitest. Use test instead."
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/actions/*.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": ["**/__*__/**"],
                    "message": "Do not import from dev only files"
                  },
                  {
                    "group": [
                      "**/*",
                      "!@/db",
                      "!@/sleep",
                      "!@/types/*",
                      "!./*"
                    ],
                    "message": "You can import from @/db, @/sleep, @/types, and sibling files"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/components/__storybook__/*.tsx"],
      "linter": {
        "rules": {
          "correctness": {
            "noRestrictedElements": "off"
          }
        }
      }
    },
    {
      "includes": ["src/hooks/**/use-*.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": ["**/__*__/**"],
                    "message": "Do not import from dev only files"
                  },
                  {
                    "group": [
                      "**/*",
                      "!@hookform/resolvers/zod",
                      "!dexie",
                      "!preact/hooks",
                      "!react-hook-form",
                      "!zod",
                      "!@/hooks/**/*",
                      "!@/types/*",
                      "!./*"
                    ],
                    "message": "You can import from @hookform/resolvers/zod, dexie, preact/hooks, react-hook-form, zod, hooks, types, and sibling files"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/hooks/**/use-*.test.tsx"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["../**/*"],
                    "message": "Do not use relative imports"
                  },
                  {
                    "group": [
                      "**/*",
                      "!vitest",
                      "!vitest-browser-preact",
                      "!preact/hooks",
                      "!zod",
                      "!@/test-utils/*",
                      "!./*"
                    ],
                    "message": "You can import from test, preact/hooks, zod, test-utils, and sibling files"
                  },
                  {
                    "group": ["vitest"],
                    "importNamePattern": "it",
                    "message": "Do not import it from vitest. Use test instead."
                  }
                ]
              }
            },
            "useComponentExportOnlyModules": "off"
          }
        }
      }
    },
    {
      "includes": ["src/types/*.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["**/*", "!./*"],
                    "message": "You can import from sibling files"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/test-utils/create-test-db.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["**/*", "!dexie"],
                    "message": "You can import from dexie"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/test-utils/render-hook.tsx"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["**/*", "!vitest-browser-preact"],
                    "message": "You can import from vitest-browser-preact"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/db.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["**/*", "!dexie"],
                    "message": "You can import from dexie"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/main.tsx"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": [
                      "**/*",
                      "!preact",
                      "!sonner",
                      "!@/app",
                      "!@/index.css"
                    ],
                    "message": "You can import from preact, sonner, app.tsx, and index.css"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": [".storybook/main.ts"],
      "linter": {
        "rules": {
          "style": {
            "noDefaultExport": "off",
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["**/*", "!@storybook/preact-vite"],
                    "message": "You can import from @storybook/preact-vite"
                  },
                  {
                    "group": ["@storybook/preact-vite"],
                    "importNamePattern": "StorybookConfig",
                    "invertImportNamePattern": true,
                    "message": "You can import StorybookConfig from @storybook/preact-vite"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": [".storybook/preview.ts"],
      "linter": {
        "rules": {
          "style": {
            "noDefaultExport": "off",
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": [
                      "**/*",
                      "!@storybook/preact-vite",
                      "!@/index.css"
                    ],
                    "message": "You can import from @storybook/preact-vite, and index.css"
                  },
                  {
                    "group": ["@storybook/preact-vite"],
                    "importNamePattern": "Preview",
                    "invertImportNamePattern": true,
                    "message": "You can import Preview from @storybook/preact-vite"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["vite.config.ts"],
      "linter": {
        "rules": {
          "correctness": {
            "noNodejsModules": "off"
          },
          "style": {
            "noDefaultExport": "off",
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": [
                      "**/*",
                      "!node:path",
                      "!@preact/preset-vite",
                      "!@tailwindcss/vite",
                      "!vite",
                      "!vite-plugin-svgr"
                    ],
                    "message": "You can import from node:path, @preact/preset-vite, @tailwindcss/vite, vite, and vite-plugin-svgr"
                  }
                ]
              }
            }
          }
        }
      }
    }
  ]
}
